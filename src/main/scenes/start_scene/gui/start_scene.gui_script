local Config = require('src.config.config')
local Constants = require('src.constants.constants')
local Services = require('src.services.services')
local Libs = require('src.libs.libs')

local GuiLib = Libs.gui

local DataService = Services.data

local GuiButtonsConf = Config.gui.scenes.start.button_animation

local ScenesService = Services.scenes
local ScenesConst = Constants.scenes

local MsgConst = Constants.messages
local ActionsConst = Constants.actions
local SceneConst = Constants.component_urls.scenes.start
local ComponentsUrls = Constants.component_urls

function init(self)
    msg.post(".", "acquire_input_focus")

    local app_data = DataService:get_all()
    local best_score = app_data.game and app_data.game.best_score or 0

    self.best_score_node = gui.get_node(SceneConst.gui_nodes.best_score)
    self.button_start = gui.get_node(SceneConst.gui_nodes.button_start)
    self.slice_lemon = gui.get_node(SceneConst.gui_nodes.slice_lemon)
    self.lemon_particlefx = gui.get_node(SceneConst.gui_nodes.lemon_particlefx)

    gui.set_text(self.best_score_node, 'Your best score: ' .. best_score)
end

function on_input(self, action_id, action)

    if action_id == hash(ActionsConst.click) then
        if gui.is_enabled(self.slice_lemon) and gui.pick_node(self.slice_lemon, action.x, action.y) then
            gui.play_particlefx(self.lemon_particlefx)
            gui.set_enabled(self.slice_lemon, false)
        end

        if action.released and gui.pick_node(self.button_start, action.x, action.y) then
            GuiLib:animate_button_click(self.button_start, GuiButtonsConf.blackout, GuiButtonsConf.scale, GuiButtonsConf.duration)
            GuiLib:animate_button_click(self.button_start, 0.12, vmath.vector3(0.1, 0.05, 0), 0.3)
            ScenesService.switch_to_scene(ScenesConst.scenes.game)
        end
    end
end
